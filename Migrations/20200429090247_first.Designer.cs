// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmashBotUltimate.Models;

namespace SmashBotUltimate.Migrations
{
    [DbContext(typeof(PlayerContext))]
    [Migration("20200429090247_first")]
    partial class first
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("SmashBotUltimate.Models.Guild", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Guilds");
                });

            modelBuilder.Entity("SmashBotUltimate.Models.GuildPlayer", b =>
                {
                    b.Property<int>("GuildId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("GuildId", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("GuildPlayers");
                });

            modelBuilder.Entity("SmashBotUltimate.Models.Match", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastMatch")
                        .HasColumnType("TEXT");

                    b.Property<int>("OpponentPlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("PendingFight")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Topic")
                        .HasColumnType("TEXT");

                    b.Property<int>("WinCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OpponentPlayerId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("SmashBotUltimate.Models.Nickname", b =>
                {
                    b.Property<int>("NicknameId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Platform")
                        .HasColumnType("TEXT");

                    b.Property<int>("PlatformId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("NicknameId");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerNicknames");
                });

            modelBuilder.Entity("SmashBotUltimate.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("Nivel")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayerId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("SmashBotUltimate.Models.GuildPlayer", b =>
                {
                    b.HasOne("SmashBotUltimate.Models.Guild", "Guild")
                        .WithMany("GuildPlayers")
                        .HasForeignKey("GuildId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmashBotUltimate.Models.Player", "Player")
                        .WithMany("GuildPlayers")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SmashBotUltimate.Models.Match", b =>
                {
                    b.HasOne("SmashBotUltimate.Models.Player", "OpponentPlayer")
                        .WithMany("OpponentMatches")
                        .HasForeignKey("OpponentPlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SmashBotUltimate.Models.Player", null)
                        .WithMany("PlayerMatches")
                        .HasForeignKey("PlayerId");
                });

            modelBuilder.Entity("SmashBotUltimate.Models.Nickname", b =>
                {
                    b.HasOne("SmashBotUltimate.Models.Player", "OriginPlayer")
                        .WithMany("Nicknames")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
